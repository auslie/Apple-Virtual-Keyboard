$main: linear-gradient(135deg, rgba(205,207,214,1) 0%,rgba(190,192,196,1) 100%);

$keyBkg: #f5f5f5;
$keyBkgHover: #e5e3e4;
$keyBkgActive: #c5c3c4;
$keycolor: #757374;
$light: #7d7b7c;
$green: #74f583;
$black: #000;
$white: #fff;

*{box-sizing: border-box; outline: 0px;}
::-moz-selection {background: transparent;}
::selection {background: transparent;}

body{font-family: "Work Sans"; margin: 0px;}
  


main{
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  width: auto;
  height: auto;
  transform: translate(-50%, -50%);
  .input{
    display: block;
    position: relative;
    width: 90%;
    height: auto;
    padding: 18px;
    margin: 0px auto 40px auto;
    text-align: center;
    font-family: "Anonymous Pro";
    font-size: 30px;
    line-height: 40px;
    color: $keycolor;
    border: 0px;
    border-bottom: 2px solid #ddd;
    background: transparent;

    &:empty:not(:focus):before{
      content:attr(data-text);
      opacity: .5;
    }
    &:empty:not(:focus):after{
      content:"";
      opacity: 0;
    }
     &:after{
      content:"|";
      opacity: 0;
    }
  }
}


.keyboard{
  display: grid;
  grid-template-columns: repeat(58, 8px);
  grid-template-rows: repeat(6, 56px);
  position:relative;
  width: auto;
  height: auto;
  padding: 10px;
  grid-gap: 8px;
  border-radius: 14px;
  background: $main;
  .key{
    display:block;
    position: relative;
    grid-column: span 4;
    color: $keycolor;
    border-radius: 6px;
    background: $keyBkg;
    border: 1px solid rgba($black,.4);
    box-shadow: 1px 1px 0px 0px rgba($white,.2);
    cursor: pointer;
    &:hover{
      background: $keyBkgHover;
    }
    &:active{
      background: $keyBkgActive;
    }
    &.m{grid-column: span 5;}
    &.l{grid-column: span 6;}
    &.xl{grid-column: span 7;}
    &.xxl{grid-column: span 9;}
    &.space{grid-column: span 20;}
    &.tch:after{
      content:"";
      display: block;
      position: absolute;
      bottom: 10px;
      left: calc(50% - 7px);
      width: 14px;
      height: 3px;
      border-radius: 3px;
      background: transparent;
      box-shadow: 0px 1px 2px rgba($black,.3);
    }
    polyline, path, line{
      fill:none;
      stroke: $light;
      stroke-linecap:round;
      stroke-linejoin:round;
      stroke-miterlimit: 10;
    }
    span{
      display: block;
      position: absolute;
      text-transform: uppercase;
    }
    svg{
      display: block;
      position: absolute;
    }
    &.lttr span{
      width: 100%;
      height: 100%;
      text-align: center;
      font-size: 19px;
      line-height: 54px;
    }
    &.double span{
      width: 100%;
      text-align: center;
      &.up{
        top: 8px;
        font-size: 14px;
        line-height: 12px;
      }
      &.dw{
        bottom: 10px;
        font-size: 19px;
        line-height: 16px;
      }
    }
    &.func span{
      width: 100%;
      bottom: 8px;
      text-align: center;
      font-size: 8px;
      line-height: 8px;
    }
    &.func svg{
      width: 100%;
      top: 8px;
    }
    &.icon svg{
      width: 100%;
      top: 18px;
    }
    &.label{
      color: $light;
      &.lt span{left: 8px;}
      &.rt span{right: 8px;}
      &.lt svg{left: 4px;}
      &.rt svg{right: 4px;}
      span{
        bottom: 8px;
        font-size: 11px;
        font-weight: 400;
        text-transform: none;
      }
      svg{
        top: 4px;
      }
    }
    &.arrow{
      path{
        fill: $light;
        stroke: none;
      }
    }
    &.split{
      .btn{
        display: block;
        position: absolute;
        width: 100%;
        height: 50%;
        svg{
          top: 3px;
          width: 100%;
          path{
            fill: $light;
            stroke: none;
          }
        }
        &.top{
          top: 0px;
          border-bottom:  1px solid rgba($black,.3);
          background: linear-gradient(to bottom, rgba($black,0) 60%,rgba($black,.15) 100%);
        }
        &.bottom{
          bottom: 0px;
          border-top:  1px solid rgba($black,.3);
          background: linear-gradient(to bottom, rgba($black,.15) 0%,rgba($black,0) 40%);
        }
      }
    }
    &.lock:after{
      content:"";
      display: block;
      position: absolute;
      top: 8px;
      left: 8px;
      z-index: 10;
      width: 5px;
      height: 5px;
      border: 1px solid rgba($black,.2);
      border-radius: 16px;
      background: $light;
      opacity: 0.6;
    }
    &.lock.on:after{
      background: $green;
      box-shadow: 0px 0px 4px $green;
    }
  }
}

.key{
  transition: .2s ease-out all; 
  -moz-transition: .2s ease-out all; 
  -webkit-transition: .2s ease-out all;
}

.input:after {
  animation-name: cursor;
  animation-duration: 450ms;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-delay: 2s;
}

@keyframes cursor {
  0%   {opacity: 0}
  100% {opacity: .5}
}
